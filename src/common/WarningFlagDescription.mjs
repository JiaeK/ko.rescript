// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Url from "./Url.mjs";
import * as Next from "../bindings/Next.mjs";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as LangUtil from "./LangUtil.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

var numeric = [
  [
    1,
    "Suspicious-looking start-of-comment mark."
  ],
  [
    2,
    "Suspicious-looking end-of-comment mark."
  ],
  [
    3,
    "Deprecated feature."
  ],
  [
    4,
    "Fragile pattern matching: matching that will remain complete even if additional constructors are added to one of the variant types matched."
  ],
  [
    5,
    "Partially applied function: expression whose result has function type and is ignored."
  ],
  [
    6,
    "Label omitted in function application."
  ],
  [
    8,
    "Partial match: missing cases in pattern-matching."
  ],
  [
    9,
    "Missing fields in a record pattern."
  ],
  [
    10,
    "Expression on the left-hand side of a sequence that doesn't have type \"unit\" (and that is not a function, see warning number 5)."
  ],
  [
    11,
    "Redundant case in a pattern matching (unused match case)."
  ],
  [
    12,
    "Redundant sub-pattern in a pattern-matching."
  ],
  [
    14,
    "Illegal backslash escape in a string constant."
  ],
  [
    16,
    "Unerasable optional argument."
  ],
  [
    20,
    "Unused function argument."
  ],
  [
    21,
    "Non-returning statement."
  ],
  [
    23,
    "Useless record \"with\" clause."
  ],
  [
    24,
    "Bad module name: the source file name is not a valid ReScript module name."
  ],
  [
    26,
    "Suspicious unused variable: unused variable that is bound with \"let\" or \"as\", and doesn't start with an underscore (\"_\") character."
  ],
  [
    27,
    "Innocuous unused variable: unused variable that is not bound with \"let\" nor \"as\", and doesn't start with an underscore (\"_\") character."
  ],
  [
    28,
    "Wildcard pattern given as argument to a constant constructor."
  ],
  [
    29,
    "Unescaped end-of-line in a string constant (non-portable code)."
  ],
  [
    30,
    "Two labels or constructors of the same name are defined in two mutually recursive types."
  ],
  [
    32,
    "Unused value declaration."
  ],
  [
    33,
    "Unused open statement."
  ],
  [
    34,
    "Unused type declaration."
  ],
  [
    35,
    "Unused for-loop index."
  ],
  [
    36,
    "Unused ancestor variable."
  ],
  [
    37,
    "Unused constructor."
  ],
  [
    38,
    "Unused extension constructor."
  ],
  [
    39,
    "Unused rec flag."
  ],
  [
    43,
    "Nonoptional label applied as optional."
  ],
  [
    44,
    "Open statement shadows an already defined identifier."
  ],
  [
    45,
    "Open statement shadows an already defined label or constructor."
  ],
  [
    46,
    "Error in environment variable."
  ],
  [
    47,
    "Illegal attribute payload."
  ],
  [
    48,
    "Implicit elimination of optional arguments."
  ],
  [
    49,
    "Absent cmi file when looking up module alias."
  ],
  [
    50,
    "Unexpected documentation comment."
  ],
  [
    52,
    "Fragile constant pattern."
  ],
  [
    53,
    "Attribute cannot appear in this context"
  ],
  [
    54,
    "Attribute used more than once on an expression"
  ],
  [
    56,
    "Unreachable case in a pattern-matching (based on type information)."
  ],
  [
    57,
    "Ambiguous or-pattern variables under guard"
  ],
  [
    59,
    "Assignment to non-mutable value"
  ],
  [
    60,
    "Unused module declaration"
  ],
  [
    61,
    "Unboxable type in primitive declaration"
  ],
  [
    62,
    "Type constraint on GADT type declaration"
  ],
  [
    101,
    "Unused bs attributes"
  ],
  [
    102,
    "Polymorphic comparison introduced (maybe unsafe)"
  ],
  [
    103,
    "Fragile FFI definitions"
  ],
  [
    104,
    "bs.deriving warning with customized message "
  ],
  [
    105,
    "External name is inferred from val name is unsafe from refactoring when changing value name"
  ],
  [
    106,
    "Unimplemented primitive used:"
  ],
  [
    107,
    "Integer literal exceeds the range of representable integers of type int"
  ],
  [
    108,
    "Uninterpreted delimiters (for unicode)"
  ],
  [
    109,
    "Toplevel expression has unit type"
  ]
];

var numericCn = [
  [
    1,
    "看起来很可疑的注释开启标记。"
  ],
  [
    2,
    "看起来很可疑的注释结尾标记。"
  ],
  [
    3,
    "已被废弃的特性"
  ],
  [
    4,
    "脆弱的模式匹配：即使在匹配的某个变体类型上增加了额外的构造函数，匹配仍然完整。"
  ],
  [
    5,
    "部分应用的函数：表达式的类型为函数且被忽略了。  "
  ],
  [
    6,
    "函数调用时省略忽略了标签"
  ],
  [
    8,
    "部分匹配：部分模式未被匹配到"
  ],
  [
    9,
    "记录模式中有未被匹配到的字段"
  ],
  [
    10,
    "序列左侧的表达式的类型不为\"unit\"（也不为函数，请看5号警告）"
  ],
  [
    11,
    "模式匹配中有冗余的分支（不会被用到的分支）"
  ],
  [
    12,
    "模式匹配中有冗余的子模式"
  ],
  [
    14,
    "字符串常量中有非法的转义字符"
  ],
  [
    16,
    "不可擦除的可选参数。"
  ],
  [
    20,
    "未被使用的函数参数"
  ],
  [
    21,
    "不会返回的语句"
  ],
  [
    23,
    "记录存在没有用到的“with”。"
  ],
  [
    24,
    "不良的模块名：源代码的文件名不是有效的 ReScript 模块名。"
  ],
  [
    26,
    "可疑的未使用变量：未使用的变量，与 \"let\" 或 \"as\" 绑定，并且不以下划线 (\"_\") 字符开头。"
  ],
  [
    27,
    "无害的未使用变量：未与 \"let\" 或 \"as\" 绑定的未使用变量，并且不以下划线 (\"_\") 字符开头。"
  ],
  [
    28,
    "通配符模式作为常量构造函数的参数给出。"
  ],
  [
    29,
    "字符串常量中未转义的换行符（不可移植代码）。"
  ],
  [
    30,
    "在两个相互递归的类型中定义了两个同名的标签或构造函数。"
  ],
  [
    32,
    "未被使用的值声明。"
  ],
  [
    33,
    "未被使用的 open 语句。"
  ],
  [
    34,
    "未被使用的类型声明。"
  ],
  [
    35,
    "未被使用的 for 循环下标"
  ],
  [
    37,
    "未被使用的构造器。"
  ],
  [
    38,
    "未被使用的扩展构造器"
  ],
  [
    39,
    "未被使用的 rec 标记"
  ],
  [
    43,
    "非可选标签作为可选标签应用。"
  ],
  [
    44,
    "Open 语句了隐藏已定义的标识符。"
  ],
  [
    45,
    "Open 语句隐藏已定义的标签或构造函数。"
  ],
  [
    46,
    "环境变量错误。"
  ],
  [
    47,
    "非法属性装载（payload）。"
  ],
  [
    48,
    "可选参数被隐式消除。"
  ],
  [
    49,
    "查找模块别名时缺少 cmi 文件。"
  ],
  [
    52,
    "脆弱的常量模式。"
  ],
  [
    53,
    "属性不能出现在当前上下文中"
  ],
  [
    54,
    "属性被使用了多于一次"
  ],
  [
    56,
    "不可达的模式分支 (基于类型信息得出的结论)。"
  ],
  [
    57,
    "在使用模式守卫（guard）的情况下使用了有歧义的 \"or\" 模式"
  ],
  [
    59,
    "对不可变的值进行赋值"
  ],
  [
    60,
    "未使用的模块声明"
  ],
  [
    61,
    "不可拆箱的基本类型"
  ],
  [
    62,
    "通用代数数据类型（GADT）存在类型约束"
  ],
  [
    101,
    "未被使用的 \"bs\" 属性"
  ],
  [
    102,
    "使用了多态比较（可能不安全）"
  ],
  [
    103,
    "脆弱的 FFI 定义"
  ],
  [
    104,
    "bs.deriving 的自定义警告信息"
  ],
  [
    105,
    "external 的名称是从 val 中推断出来的，该名称在更改值名称时对重构是不安全的"
  ],
  [
    106,
    "使用了未实现的基本类型"
  ],
  [
    107,
    "整数字面值超出了类型 int 可表达的范围"
  ],
  [
    108,
    "未解释的分隔符（用于 unicode）"
  ],
  [
    109,
    "顶层表达式的类型为 unit"
  ]
];

var numericKo = [
  [
    1,
    "의심스러운 주석의 시작 표시"
  ],
  [
    2,
    "의심스러운 주석의 끝 표시"
  ],
  [
    3,
    "더 이상 사용되지 않는 기능"
  ],
  [
    4,
    "취약한 패턴 매칭: 매칭된 변형 타입에 추가 생성자가 더해지더라도 매칭은 여전히 완전한 상태로 유지됩니다."
  ],
  [
    5,
    "부분적으로 적용된 함수: 표현식의 타입은 함수이며 무시됩니다."
  ],
  [
    6,
    "함수를 응용할 때 라벨을 생략합니다."
  ],
  [
    8,
    "부분 매칭: 패턴 매칭에서 대소문자 표기가 일치하지 않습니다."
  ],
  [
    9,
    "레코드 패턴에 일치하지 않는 필드가 있습니다."
  ],
  [
    10,
    "시퀀스 왼쪽에 있는 식의 타입은 \"unit\"이 아닙니다(함수도 아닙니다. 경고 5번을 참조하세요)."
  ],
  [
    11,
    "패턴 매칭에서 중복된 대소문자 표기가 있습니다(불필요한 대소문자)."
  ],
  [
    12,
    "패턴 매칭에 중복된 하위 패턴이 있습니다."
  ],
  [
    14,
    "문자열 상수에 잘못된 백슬래시 이스케이프가 있습니다."
  ],
  [
    16,
    "지울 수 없는 옵션 인수입니다."
  ],
  [
    20,
    "사용되지 않는 함수 인수입니다."
  ],
  [
    21,
    "반환되지 않는 구문입니다."
  ],
  [
    23,
    "쓸모없는 레코드 \"with\"절입니다."
  ],
  [
    24,
    "잘못된 모듈 이름: 소스 파일 이름이 올바른 ReScript 모듈 이름이 아닙니다."
  ],
  [
    26,
    "의심스러운 미사용 변수: \"let\" 또는 \"as\"로 바인딩되며, 밑줄 표시(\"_\") 문자로 시작하지 않는 미사용 변수입니다."
  ],
  [
    27,
    "무해한 미사용 변수: \"let\" 또는 \"as\"로 바인딩되지 않고, 밑줄 표시(\"_\") 문자로 시작하지 않는 미사용 변수입니다."
  ],
  [
    28,
    "상수 생성자에 인수로 주어진 와일드카드 패턴입니다."
  ],
  [
    29,
    "문자열 상수에서 이스케이프되지 않은 줄 바꿈 문자(이식할 수 없는 코드)입니다."
  ],
  [
    30,
    "두 개의 상호 재귀적인 타입에서 두 개의 동일한 이름의 레이블 또는 생성자를 정의하고 있습니다."
  ],
  [
    32,
    "사용되지 않은 값 선언입니다."
  ],
  [
    33,
    "사용되지 않는 open 구문입니다."
  ],
  [
    34,
    "사용되지 않은 타입 선언입니다."
  ],
  [
    35,
    "사용되지 않는 for-loop 인덱스입니다."
  ],
  [
    36,
    "사용되지 않는 상위 변수입니다."
  ],
  [
    37,
    "사용되지 않는 생성자입니다."
  ],
  [
    38,
    "사용되지 않는 확장 생성자입니다."
  ],
  [
    39,
    "사용되지 않는 rec flag 입니다."
  ],
  [
    43,
    "선택 사항이 아닌 레이블이 선택 사항으로 사용되었습니다."
  ],
  [
    44,
    "Open 구문이 이미 정의된 식별자를 숨기고 있습니다."
  ],
  [
    45,
    "Open 구문이 이미 정의된 레이블 또는 생성자를 숨기고 있습니다."
  ],
  [
    46,
    "환경 변수에 오류가 있습니다."
  ],
  [
    47,
    "잘못된 속성 데이터 전송(payload)입니다."
  ],
  [
    48,
    "선택 가능한 인수의 암시적 제거입니다."
  ],
  [
    49,
    "모듈 별칭을 조회할 때 cmi 파일이 없습니다."
  ],
  [
    50,
    "예상치 못한 문서 설명입니다."
  ],
  [
    52,
    "취약한 상수 패턴입니다."
  ],
  [
    53,
    "속성을 현재의 맥락에 표시할 수 없습니다"
  ],
  [
    54,
    "표현식에서 두 번 이상 사용된 속성입니다."
  ],
  [
    56,
    "패턴 매칭에서 도달할 수 없는 대소문자 표기(타입 정보 기준)입니다."
  ],
  [
    57,
    "가드(guard)를 사용할 경우 모호성이 있는 \"or\" 패턴 변수를 사용합니다."
  ],
  [
    59,
    "불변값값에 값을 할당합니다."
  ],
  [
    60,
    "사용되지 않는 모듈 선언입니다."
  ],
  [
    61,
    "원시적 선언에서 확인할 수 없는 타입입니다."
  ],
  [
    62,
    "GADT 타입 선언에 대한 타입 제약이 있습니다."
  ],
  [
    101,
    "사용되지 않는 bs 속성입니다."
  ],
  [
    102,
    "폴리몰픽적 비교를 사용합니다(안전하지 않을 수 있음)."
  ],
  [
    103,
    "취약한 FFI 정의입니다."
  ],
  [
    104,
    "사용자 정의 메시지를 포함한 bs.deriving 경고입니다."
  ],
  [
    105,
    "값 이름을 변경할 때, val name이 refactoring으로부터 안전하지 않다는 이유로 external 이름이 유추됩니다."
  ],
  [
    106,
    "구현되지 않은 원시적 사용입니다:"
  ],
  [
    107,
    "정수 리터럴이 int 타입의 표시 가능한 정수 범위를 초과합니다."
  ],
  [
    108,
    "해석되지 않은 구분 기호(유니코드의 경우)입니다."
  ],
  [
    109,
    "최상위 표현식에 unit 타입이 있습니다."
  ]
];

Belt_Array.map(numeric, (function (prim) {
        return prim[0];
      }));

var letterDescriptions = [[
    "a",
    "All flags"
  ]];

function getDescription(num, numeric) {
  return Belt_Option.map(Caml_option.undefined_to_opt(numeric.find(function (param) {
                      return num === param[0];
                    })), (function (param) {
                return param[1];
              }));
}

function lookupAll(param) {
  var router = Next.Router.useRouter(undefined);
  var url = Url.parse(router.route);
  var lang = LangUtil.whichLang(url);
  return Belt_Array.map(numeric, (function (param) {
                var desc = param[1];
                var num = param[0];
                var tmp;
                switch (lang) {
                  case /* English */0 :
                      tmp = desc;
                      break;
                  case /* Chinese */1 :
                      var desc$1 = getDescription(num, numericCn);
                      tmp = desc$1 !== undefined ? desc$1 : desc;
                      break;
                  case /* Korean */2 :
                      var desc$2 = getDescription(num, numericKo);
                      tmp = desc$2 !== undefined ? desc$2 : desc;
                      break;
                  
                }
                return [
                        String(num),
                        tmp
                      ];
              }));
}

function lookup(str) {
  var num = Belt_Int.fromString(str);
  if (num !== undefined) {
    var description = getDescription(num, numeric);
    if (description !== undefined) {
      return [[
                str,
                description
              ]];
    } else {
      return [];
    }
  }
  var search = str.toLowerCase();
  return Belt_Array.keep(letterDescriptions, (function (param) {
                return param[0] === search;
              }));
}

function fuzzyLookup(str) {
  var letters = Belt_Array.keep(letterDescriptions, (function (param) {
          return param[0].startsWith(str);
        }));
  var numbers = Belt_Array.map(Belt_Array.keep(numeric, (function (param) {
              return String(param[0]).startsWith(str);
            })), (function (param) {
          return [
                  String(param[0]),
                  param[1]
                ];
        }));
  return Belt_Array.concat(letters, numbers);
}

var InvalidInput = /* @__PURE__ */Caml_exceptions.create("WarningFlagDescription.Parser.InvalidInput");

function isModifier(str) {
  if (str === "+") {
    return true;
  } else {
    return str === "-";
  }
}

function parseExn(input) {
  var ret = [];
  var pos = 0;
  var state = /* ParseModifier */0;
  var last = input.length - 1 | 0;
  while(pos <= last) {
    var cur = input[pos];
    var match = state;
    var newState;
    if (match) {
      var acc = match.acc;
      var modifier = match.modifier;
      var next = (pos + 1 | 0) < last ? input[pos + 1 | 0] : cur;
      if (isModifier(cur)) {
        throw {
              RE_EXN_ID: InvalidInput,
              _1: "'+' and '-' not allowed in flag name on pos " + String(pos),
              Error: new Error()
            };
      }
      if (next === "+" || next === "-" || pos >= last) {
        var token_enabled = modifier === "+";
        var token_flag = acc + cur;
        var token = {
          enabled: token_enabled,
          flag: token_flag
        };
        ret.push(token);
        newState = /* ParseModifier */0;
      } else {
        newState = {
          modifier: modifier,
          acc: acc + cur,
          [Symbol.for("name")]: "ParseFlag"
        };
      }
    } else if (cur === "+" || cur === "-") {
      newState = {
        modifier: cur,
        acc: "",
        [Symbol.for("name")]: "ParseFlag"
      };
    } else {
      throw {
            RE_EXN_ID: InvalidInput,
            _1: "Expected '+' or '-' on pos " + String(pos),
            Error: new Error()
          };
    }
    state = newState;
    pos = pos + 1 | 0;
  };
  var match$1 = state;
  if (match$1 && match$1.acc === "") {
    throw {
          RE_EXN_ID: InvalidInput,
          _1: "Expected flag name after '" + (match$1.modifier + ("' on pos " + String(pos))),
          Error: new Error()
        };
  }
  return ret;
}

function parse(input) {
  try {
    return {
            TAG: 0,
            _0: parseExn(input),
            [Symbol.for("name")]: "Ok"
          };
  }
  catch (raw_str){
    var str = Caml_js_exceptions.internalToOCamlException(raw_str);
    if (str.RE_EXN_ID === InvalidInput) {
      return {
              TAG: 1,
              _0: str._1,
              [Symbol.for("name")]: "Error"
            };
    }
    throw str;
  }
}

function merge(base, other) {
  var dict = Js_dict.fromArray(Belt_Array.map(base.slice(), (function (token) {
              return [
                      token.flag,
                      token
                    ];
            })));
  Belt_Array.forEach(other, (function (token) {
          dict[token.flag] = token;
        }));
  return Js_dict.values(dict).sort(function (t1, t2) {
              var f1 = t1.flag;
              var f2 = t2.flag;
              var match = Number.isNaN(Number(f1));
              var match$1 = Number.isNaN(Number(f2));
              if (match) {
                if (match$1) {
                  return f1.localeCompare(f2) | 0;
                } else {
                  return -1;
                }
              } else if (match$1) {
                return 1;
              } else {
                return f1.localeCompare(f2) | 0;
              }
            });
}

function tokensToString(tokens) {
  return tokens.map(function (token) {
                var modifier = token.enabled ? "+" : "-";
                return modifier + token.flag;
              }).join("");
}

var Parser = {
  parse: parse,
  merge: merge,
  tokensToString: tokensToString
};

export {
  Parser ,
  lookup ,
  lookupAll ,
  fuzzyLookup ,
}
/*  Not a pure module */
